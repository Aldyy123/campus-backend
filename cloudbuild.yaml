# App Engine Deployment
# steps:
# - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#   entrypoint: 'bash'
#   args: ['-c', 'gcloud app deploy']
# timeout: '1600s'

# Cloud Run Deployment
steps:
  # Create env file for production
  # - name: node:18.16.0
  #   entrypoint: npm
  #   args: ["run", "create-env"]
  #   env:
  #   - 'PROD_DATABASE_HOST=${_INSTANCE_CONNECTION_NAME}'
  #   - 'PROD_DATABASE_NAME=${_DB_NAME}'
  #   - 'PROD_DATABASE_USERNAME=${_DB_USER}'
  #   - 'PROD_DATABASE_PASSWORD=${_DB_USER}'
  #   - 'PROD_DATABASE_PORT=5432'
  # Build the container image
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "${_DOCKER_IMAGE}", "."]
  # Push the container image to Container Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "${_DOCKER_IMAGE}"]
  # Deploy container image to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: /bin/bash
    args:
      - "-c"
      - |
        gcloud run deploy production --image ${_DOCKER_IMAGE} \
        --add-cloudsql-instances ${_INSTANCE_CONNECTION_NAME} \
        --set-env-vars INSTANCE_UNIX_SOCKET="/cloudsql/${_INSTANCE_CONNECTION_NAME}" \
        --set-env-vars INSTANCE_CONNECTION_NAME=${_INSTANCE_CONNECTION_NAME} \
        --set-env-vars DB_NAME=${_DB_NAME} \
        --set-env-vars DB_USER=${_DB_USER} \
        --set-env-vars DB_PASS=${_DB_PASS} \
        --region asia-southeast2 \
        --allow-unauthenticated
